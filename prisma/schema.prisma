datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model File {
  id            BigInt    @id @default(autoincrement())
  name          String    @db.VarChar(255)
  url           String    @db.VarChar(255)
  size          BigInt
  mime          String    @db.VarChar(50)
  createdAt     DateTime  @default(now()) @map("created_at")
  memberId      BigInt?   @map("member_id")
  member        Member?   @relation("Member", fields: [memberId], references: [id])
  profileMember Member[]  @relation("ProfileFile")
  RoomFile      RoomFile?

  @@map("file")
}

model Member {
  id              BigInt       @id @default(autoincrement())
  email           String       @unique @db.VarChar(50)
  nickname        String       @unique @db.VarChar(20)
  password        String       @db.VarChar(100)
  managedChatRoom ChatRoom[]
  memberRoom      MemberRoom[]
  files           File[]       @relation("Member")
  fileId          BigInt       @map("file_id")
  profileFile     File         @relation("ProfileFile", fields: [fileId], references: [id])
  Chat            Chat[]

  @@map("member")
}

model ChatRoom {
  id            BigInt       @id @default(autoincrement())
  name          String       @db.VarChar(100)
  color         String       @db.VarChar(30)
  managedMember Member       @relation(fields: [managerId], references: [id])
  managerId     BigInt       @map("manager_id")
  MemberRoom    MemberRoom[]
  RoomFile      RoomFile[]
  Chat          Chat[]

  @@map("chat_room")
}

model MemberRoom {
  roomId   BigInt   @map("room_id")
  memberId BigInt   @map("member_id")
  member   Member   @relation(fields: [memberId], references: [id])
  room     ChatRoom @relation(fields: [roomId], references: [id])

  @@id([roomId, memberId])
  @@map("member_room")
}

model RoomFile {
  roomId BigInt   @map("room_id")
  fileId BigInt   @unique @map("file_id")
  file   File     @relation(fields: [fileId], references: [id])
  room   ChatRoom @relation(fields: [roomId], references: [id])

  @@id([fileId, roomId])
  @@map("room_file")
}

model Chat {
  id        BigInt   @id @default(autoincrement())
  message   String   @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  memberId  BigInt   @map("member_id")
  member    Member   @relation(fields: [memberId], references: [id])
  roomId    BigInt   @map("room_id")
  room      ChatRoom @relation(fields: [roomId], references: [id])

  @@map("chat")
}
